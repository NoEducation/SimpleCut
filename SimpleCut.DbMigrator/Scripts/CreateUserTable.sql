CREATE TABLE PUBLIC.Users
(
    UserId INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	Login VARCHAR(255) NOT NULL,
	Email VARCHAR(255) NOT NULL,
	Password VARCHAR(512) NOT NULL,
	IsActive BOOLEAN NOT NULL,
	IsConfirmed BOOLEAN NOT NULL,
	Name VARCHAR(255) NOT NULL,
	Surname VARCHAR (255) NOT NULL,
	BirthDate TIMESTAMPTZ NOT NULL,
	Gender smallint NOT NULL,
	Description TEXT NULL,
	AddedDate TIMESTAMPTZ NOT NULL,
	AddedByUserId INT NULL,
	ModifedDate TIMESTAMPTZ NULL,
	ModifiedByUserId INT NULL,

	CONSTRAINT UQ_UserLogin UNIQUE(Login),
	CONSTRAINT UQ_UserEmail UNIQUE(Email),

	CONSTRAINT UserUsersAddedByUserId FOREIGN KEY(AddedByUserId) 
		REFERENCES public.Users(UserId),
	CONSTRAINT UserUsersModifiedByUserId FOREIGN KEY(ModifiedByUserId) 
		REFERENCES public.Users(UserId)
);

CREATE TABLE PUBLIC.Roles
(
	RoleId INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
 	Name VARCHAR(255),
	Description TEXT NULL
);

CREATE TABLE PUBLIC.UserRoles
(
	UserRoleId INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) ,
 	UserId INT NOT NULL,
	RoleId INT NOT NULL,
	AddedDate TIMESTAMPTZ NULL,
	AddedByUserId INT NULL,
	ModifedDate TIMESTAMPTZ NULL,
	ModifiedByUserId INT NULL,

	CONSTRAINT UserRolesRoleId FOREIGN KEY(RoleId) 
		REFERENCES public.Roles(RoleId),
	CONSTRAINT UserRoleUserId FOREIGN KEY(UserId) 
		REFERENCES public.Users(UserId),

	CONSTRAINT UserRolesUsersAddedByUserId FOREIGN KEY(AddedByUserId) 
		REFERENCES public.Users(UserId),
	CONSTRAINT UserRolesUsersModifiedByUserId FOREIGN KEY(ModifiedByUserId) 
		REFERENCES public.Users(UserId)
);


CREATE TABLE PUBLIC.RefreshTokens(
	RefreshTokenId INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	UserId INT NOT NULL,
	Token VARCHAR(512) NOT NULL,
	ExpiresDate TIMESTAMPTZ NOT NULL,
	CreatedDate TIMESTAMPTZ NOT NULL,
	RevokedDate TIMESTAMPTZ NULL,
	ReplacedByToken VARCHAR(512) NULL,
	
	CONSTRAINT RefreshTokenUserUserId FOREIGN KEY(UserId)
		REFERENCES Users(UserId)
);
